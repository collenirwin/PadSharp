<Window x:Class="PadSharp.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
        Name="window"
        Height="350" Width="525"
        MinHeight="200" MinWidth="350"
        WindowStartupLocation="Manual"
        Icon="./favicon.ico"
        Activated="window_Activated"
        Loaded="Window_Loaded"
        Closing="window_Closing"
        PreviewMouseWheel="window_MouseWheel"
        ResizeMode="CanResizeWithGrip"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="{Binding FullTitle}">

    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="Foreground" Value="{DynamicResource foreColorLight}"/>
        </Style>
        <Style x:Key="checkMenu" TargetType="MenuItem">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Foreground" Value="#23272d"/>
        </Style>

        <BooleanToVisibilityConverter x:Key="boolToVis"/>
    </Window.Resources>

    <Window.InputBindings>
        <!-- File -->
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="N" Command="{Binding NewWindowCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="O" Command="{Binding OpenInExplorerCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="S" Command="{Binding SaveAsCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="P" Command="{Binding PrintCommand}"/>

        <!-- Edit -->
        <KeyBinding Modifiers="Ctrl" Key="Z" Command="{Binding UndoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="Y" Command="{Binding RedoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="C" Command="{Binding CopyCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="X" Command="{Binding CutCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="V" Command="{Binding PasteCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="F" Command="{Binding FindCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="H" Command="{Binding FindAndReplaceCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="G" Command="{Binding GotoCommand}"/>
        <KeyBinding Key="F7" Command="{Binding CheckSpellingCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="A" Command="{Binding SelectAllCommand}"/>

        <!-- Insert -->
        <KeyBinding Modifiers="Ctrl+Alt" Key="C" Command="{Binding AddCheckMarkCommand}"/>
        <KeyBinding Modifiers="Ctrl+Alt" Key="M" Command="{Binding DateInsertDialogCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="M" Command="{Binding TodaysDateCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="T" Command="{Binding CurrentTimeCommand}"/>

        <!-- Selection -->
        <KeyBinding Modifiers="Alt" Key="C" Command="{Binding CheckMarkCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="B" Command="{Binding BoldCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="I" Command="{Binding ItalicCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="U" Command="{Binding UnderlineCommand}"/>
        <KeyBinding Modifiers="Alt" Key="D" Command="{Binding DefineCommand}"/>
        <KeyBinding Modifiers="Alt" Key="R" Command="{Binding ReverseCommand}"/>
        <KeyBinding Modifiers="Alt" Key="S" Command="{Binding SortCommand}" CommandParameter="{StaticResource false}"/>
        <KeyBinding Modifiers="Ctrl+Alt" Key="S" Command="{Binding SortCommand}" CommandParameter="{StaticResource true}"/>
        <KeyBinding Modifiers="Alt" Key="Up" Command="{Binding UpperCaseCommand}"/>
        <KeyBinding Modifiers="Alt" Key="Down" Command="{Binding LowerCaseCommand}"/>

        <!-- Settings -->
        <KeyBinding Modifiers="Alt" Key="L" Command="{Binding ToggleLineNumbersCommand}"/>
        <KeyBinding Modifiers="Alt" Key="B" Command="{Binding ToggleStatusBarCommand}"/>
        <KeyBinding Modifiers="Alt" Key="W" Command="{Binding ToggleWordWrapCommand}"/>
        <KeyBinding Modifiers="Alt" Key="T" Command="{Binding ToggleTopmostCommand}"/>
    </Window.InputBindings>

    <DockPanel FocusManager.FocusedElement="{Binding ElementName=textbox}" Background="{DynamicResource backColorDark}">
        <StackPanel Orientation="Vertical" DockPanel.Dock="Top" Background="{DynamicResource backColorDark}" Margin="0">

            <DockPanel Background="{DynamicResource backColorLight}">

                <Menu DockPanel.Dock="Left" Name="menu" Height="{StaticResource buttonHeight}" Margin="0">
                    <MenuItem Height="{Binding Height, ElementName=menu}" 
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}">
                        <MenuItem.Header>
                            <TextBlock Text="File" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="New" InputGestureText="Ctrl+N" Command="{Binding NewCommand}"/>
                        <MenuItem Header="New Window" InputGestureText="Ctrl+Shift+N" Command="{Binding NewWindowCommand}"/>
                        <MenuItem Header="Open" InputGestureText="Ctrl+O" Command="{Binding OpenCommand}"/>
                        <MenuItem Header="Open in Explorer" InputGestureText="Ctrl+Shift+O" Command="{Binding OpenInExplorerCommand}"/>
                        <MenuItem Header="Save" InputGestureText="Ctrl+S" Command="{Binding SaveCommand}"/>
                        <MenuItem Header="Save As" InputGestureText="Ctrl+Shift+S" Command="{Binding SaveAsCommand}"/>
                        <MenuItem Header="Print" InputGestureText="Ctrl+P" Command="{Binding PrintCommand}"/>
                        <MenuItem Header="Exit" InputGestureText="Alt+F4" Command="{Binding ExitCommand}"/>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}">
                        <MenuItem.Header>
                            <TextBlock Text="Edit" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Undo" InputGestureText="Ctrl+Z" Command="{Binding UndoCommand}"/>
                        <MenuItem Header="Redo" InputGestureText="Ctrl+Y" Command="{Binding RedoCommand}"/>
                        <MenuItem Header="Cut" InputGestureText="Ctrl+X" Command="{Binding CutCommand}"/>
                        <MenuItem Header="Copy" InputGestureText="Ctrl+C" Command="{Binding CopyCommand}"/>
                        <MenuItem Header="Paste" InputGestureText="Ctrl+V" Command="{Binding PasteCommand}"/>
                        <MenuItem Header="Find" InputGestureText="Ctrl+F" Command="{Binding FindCommand}"/>
                        <MenuItem Header="Find + Replace" InputGestureText="Ctrl+H" Command="{Binding FindAndReplaceCommand}"/>
                        <MenuItem Header="Goto" InputGestureText="Ctrl+G" Command="{Binding GotoCommand}"/>
                        <MenuItem Header="Check Spelling" InputGestureText="F7" Command="{Binding CheckSpellingCommand}"/>
                        <MenuItem Header="Normalize Line Endings" Command="{Binding NormalizeLineEndingdCommand}"/>
                        <MenuItem Header="Select All" InputGestureText="Ctrl+A" Command="{Binding SelectAllCommand}"/>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}">
                        <MenuItem.Header>
                            <TextBlock Text="Insert" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Checkmark" InputGestureText="Ctrl+Alt+C" Command="{Binding AddCheckMarkCommand}"/>
                        <MenuItem Header="Date from Calendar" InputGestureText="Ctrl+Alt+M" Command="{Binding DateInsertDialogCommand}"/>
                        <MenuItem Header="Today's Date" InputGestureText="Ctrl+M" Command="{Binding TodaysDateCommand}"/>
                        <MenuItem Header="Current Time" InputGestureText="Ctrl+T" Command="{Binding CurrentTimeCommand}"/>
                        <MenuItem Header="Date and Time" Command="{Binding DateAndTimeCommand}"/>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}"
                              Visibility="{Binding SelectionMenuVisibility}">
                        <MenuItem.Header>
                            <TextBlock Text="Selection" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Toggle Checkmark" InputGestureText="Alt+C" Command="{Binding CheckMarkCommand}"/>
                        <MenuItem Header="Bold" InputGestureText="Ctrl+B" Command="{Binding BoldCommand}"/>
                        <MenuItem Header="Italic" InputGestureText="Ctrl+I" Command="{Binding ItalicCommand}"/>
                        <MenuItem Header="Underline" InputGestureText="Ctrl+U" Command="{Binding UnderlineCommand}"/>
                        <Separator/>
                        <MenuItem Header="Convert Case">
                            <MenuItem Header="UPPER CASE" InputGestureText="Alt+Up"
                                      Command="{Binding UpperCaseCommand}" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="lower case" InputGestureText="Alt+Down"
                                      Command="{Binding LowerCaseCommand}" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Title Case" Command="{Binding TitleCaseCommand}" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="tOGGLE cASE" Command="{Binding ToggleCaseCommand}" Style="{StaticResource checkMenu}"/>
                        </MenuItem>
                        <MenuItem Header="Define Selection" InputGestureText="Alt+D"
                                  Command="{Binding DefineCommand}"/>
                        <MenuItem Header="Reverse Selected Lines" InputGestureText="Alt+R"
                                  Command="{Binding ReverseCommand}"/>
                        <MenuItem Header="Sort Selected Lines">
                            <MenuItem Header="Ascending" InputGestureText="Alt+S"
                                      Command="{Binding SortCommand}" CommandParameter="{StaticResource false}" 
                                      Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Descending" InputGestureText="Ctrl+Alt+S"
                                      Command="{Binding SortCommand}" CommandParameter="{StaticResource true}" 
                                      Style="{StaticResource checkMenu}"/>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}">
                        <MenuItem.Header>
                            <TextBlock Text="Settings" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Theme" Name="themeMenu">
                            <MenuItem Header="Light" IsCheckable="True"
                                      Checked="theme_Checked" Unchecked="theme_Unchecked"
                                      Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Dark" IsCheckable="True"
                                      Checked="theme_Checked" Unchecked="theme_Unchecked"
                                      Style="{StaticResource checkMenu}"/>
                        </MenuItem>
                        <MenuItem Header="Font" Command="{Binding FontCommand}"/>
                        <MenuItem Header="Date &amp; Time Format" Name="dateFormatMenu" Command="{Binding DateTimeFormatCommand}"/>
                        <MenuItem Header="Status Bar">
                            <MenuItem Header="Show Status Bar" Name="showStatusBarDropdown" InputGestureText="Alt+B"
                                      IsCheckable="True" IsChecked="{Binding StatusBarVisible, Mode=TwoWay}"
                                      Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Show Line Number"
                                      IsCheckable="True" IsChecked="{Binding LineNumberVisible, Mode=TwoWay}"
                                      Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Show Column Number"
                                      IsCheckable="True" IsChecked="{Binding ColumnNumberVisible, Mode=TwoWay}"
                                      Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Show Word Count"
                                      IsCheckable="True" IsChecked="{Binding WordCountVisible, Mode=TwoWay}"
                                      Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Show Character Count"
                                      IsCheckable="True" IsChecked="{Binding CharCountVisible, Mode=TwoWay}"
                                      Style="{StaticResource checkMenu}"/>
                        </MenuItem>
                        <MenuItem Header="Show Line Numbers" Name="showLineNumbersDropdown" InputGestureText="Alt+L"
                                  IsCheckable="True" IsChecked="{Binding ElementName=textbox, Path=ShowLineNumbers, Mode=TwoWay}"/>
                        <MenuItem Header="Word Wrap" Name="wordWrapDropdown" InputGestureText="Alt+W"
                                  IsCheckable="True" IsChecked="{Binding ElementName=textbox, Path=WordWrap, Mode=TwoWay}"/>
                        <MenuItem Header="Topmost" Name="topmostDrowndown" InputGestureText="Alt+T"
                                  IsCheckable="True" IsChecked="{Binding ElementName=window, Path=Topmost, Mode=TwoWay}"/>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}">
                        <MenuItem.Header>
                            <TextBlock Text="Help" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Licenses">
                            <MenuItem Header="Pad# License" Click="help_Click"
                                      Tag="https://github.com/collenirwin/PadSharp/blob/master/LICENSE"
                                      Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Inno Setup License" Click="help_Click"
                                      Tag="http://www.jrsoftware.org/files/is/license.txt"
                                      Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Dictionary License" Click="help_Click"
                                      Tag="https://github.com/adambom/dictionary/blob/master/LICENSE.md"
                                      Style="{StaticResource checkMenu}"/>
                        </MenuItem>
                        <MenuItem Header="Date &amp; Time Format Guide" 
                                  Tag="https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings"
                                  Click="help_Click"/>
                        <MenuItem Header="Font Styling Guide" Click="fontStyleGuide_Click"/>
                        <MenuItem Header="GitHub" Tag="https://github.com/collenirwin/PadSharp" Click="help_Click"/>
                        <MenuItem Header="About Pad#" Command="{Binding AboutCommand}"/>
                    </MenuItem>
                </Menu>

                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Name="lblFileName" ToolTip="{Binding OpenFile.FullName}" Foreground="{DynamicResource foreColorDark}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="5,0,5,0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FileSaved}" Value="True">
                                        <Setter Property="FontStyle" Value="Normal"/>
                                        <Setter Property="Text"
                                                Value="{Binding OpenFile.Name, StringFormat={}{0}, FallbackValue='Not Saved'}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FileSaved}" Value="False">
                                        <Setter Property="FontStyle" Value="Italic"/>
                                        <Setter Property="Text"
                                                Value="{Binding OpenFile.Name, StringFormat={}*{0}, FallbackValue='Not Saved'}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </DockPanel>

            <StackPanel Name="findPanelParent" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="Collapsed">

                <CheckBox Name="matchCase" Foreground="{DynamicResource foreColorDark}"
                          FlowDirection="RightToLeft" IsTabStop="False" Margin="9">
                    Match Case
                </CheckBox>

                <TextBlock Foreground="{DynamicResource foreColorDark}">Find</TextBlock>
                <TextBlock Name="lblMatches" Margin="0,5,5,5" Foreground="{DynamicResource foreColorLight}">-</TextBlock>

                <StackPanel Name="findPanel" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0" 
                            Background="{DynamicResource backColorDark}">
                    <Border BorderBrush="{DynamicResource backColorLight}" 
                            BorderThickness="1" CornerRadius="2" Margin="0,5,5,5">
                        <TextBox Name="txtFind" FontSize="14" Width="180" TextAlignment="Right" MaxHeight="22"
                                 Background="{DynamicResource backColorLight}"
                                 Foreground="{DynamicResource foreColorDark}"
                                 TextChanged="txtFind_TextChanged"/>
                    </Border>

                    <Button Content="˄" FontFamily="Consolas" FontWeight="Bold" Click="findUp_Click" IsTabStop="False"
                            Margin="0,5,5,5" Padding="4,6,4,0" Width="20" FontSize="14" Style="{DynamicResource ButtonStyle}"/>
                    <Button Content="˅" FontFamily="Consolas" FontWeight="Bold" Click="findDown_Click" IsTabStop="False"
                            Margin="0,5,5,5" Padding="4,6,4,0" Width="20" FontSize="14" Style="{DynamicResource ButtonStyle}"/>
                    <Button Content="✖" FontFamily="Consolas" Click="closeFindReplace_Click" IsTabStop="False"
                            Margin="0,5,5,5" Padding="0,0,0,0" Width="20" FontSize="10" Style="{DynamicResource ButtonStyle}"/>
                </StackPanel>
            </StackPanel>

            <StackPanel Name="replacePanelParent" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="Collapsed">

                <TextBlock Foreground="{DynamicResource foreColorDark}">Replace</TextBlock>

                <StackPanel Name="replacePanel" Orientation="Horizontal" HorizontalAlignment="Right"
                            Margin="0" Width="{Binding ActualWidth, ElementName=findPanel}"
                            Background="{DynamicResource backColorDark}">
                    <Border BorderBrush="{DynamicResource backColorLight}"
                            BorderThickness="1" CornerRadius="2" Margin="0,5,5,5">
                        <TextBox Name="txtReplace" FontSize="14" Width="180" TextAlignment="Right" MaxHeight="22"
                                 Background="{DynamicResource backColorLight}"
                                 Foreground="{DynamicResource foreColorDark}"/>
                    </Border>
                    
                    <Button Content="Next" Margin="0,5,5,5" Padding="5" FontSize="10"
                            Click="replaceNext_Click"
                            IsTabStop="False"
                            Style="{DynamicResource ButtonStyle}"/>
                    <Button Content="All" Margin="0,5,5,5" Padding="5" FontSize="10"
                            Click="replaceAll_Click"
                            IsTabStop="False"
                            Style="{DynamicResource ButtonStyle}"/>
                </StackPanel>
            </StackPanel>

            <StackPanel Name="gotoPanel" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="Collapsed">
                <TextBlock Foreground="{DynamicResource foreColorDark}">Go to line</TextBlock>
                <Border BorderBrush="{DynamicResource backColorLight}"
                            BorderThickness="1" CornerRadius="2" Margin="0,5,5,5">
                    <TextBox Name="txtGoto" FontSize="14" Width="180" TextAlignment="Right" MaxHeight="22"
                                 Background="{DynamicResource backColorLight}"
                                 Foreground="{DynamicResource foreColorDark}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding GotoGoCommand}"/>
                            <KeyBinding Key="Return" Command="{Binding GotoGoCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </Border>
                <Button Content="Go" Margin="0,5,5,5" Padding="5" FontSize="10"
                        Click="goto_Click"
                        Style="{DynamicResource ButtonStyle}"/>
                <Button Content="✖" FontFamily="Consolas" Click="closeGoto_Click"
                            Margin="0,5,5,5" Padding="5" FontSize="10" Style="{DynamicResource ButtonStyle}"/>
            </StackPanel>
        </StackPanel>

        <DockPanel Name="statusBar" DockPanel.Dock="Bottom" Background="{DynamicResource backColorLight}">
            <DockPanel.ContextMenu>
                <ContextMenu Background="{DynamicResource backColorLight}">
                    <MenuItem Header="Show Line Number"
                              IsCheckable="True" IsChecked="{Binding LineNumberVisible, Mode=TwoWay}"/>
                    <MenuItem Header="Show Column Number"
                              IsCheckable="True" IsChecked="{Binding ColumnNumberVisible, Mode=TwoWay}"/>
                    <MenuItem Header="Show Word Count"
                              IsCheckable="True" IsChecked="{Binding WordCountVisible, Mode=TwoWay}"/>
                    <MenuItem Header="Show Character Count"
                              IsCheckable="True" IsChecked="{Binding CharCountVisible, Mode=TwoWay}"/>
                </ContextMenu>
            </DockPanel.ContextMenu>
            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LineNumberVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Ln" Foreground="{DynamicResource foreColorDark}"/>
                    <TextBlock Text="{Binding LineNumber}" Foreground="{DynamicResource foreColorLight}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ColumnNumberVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Col" Foreground="{DynamicResource foreColorDark}"/>
                    <TextBlock Text="{Binding ColumnNumber}" Foreground="{DynamicResource foreColorLight}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding WordCountVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Words" Foreground="{DynamicResource foreColorDark}"/>
                    <TextBlock Text="{Binding WordCount}" Foreground="{DynamicResource foreColorLight}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CharCountVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Chars" Foreground="{DynamicResource foreColorDark}"/>
                    <TextBlock Text="{Binding ElementName=textbox, Path=Document.Text.Length}"
                               Foreground="{DynamicResource foreColorLight}"/>
                </StackPanel>
            </StackPanel>
            
            <StackPanel DockPanel.Dock="right" Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock Text="Font" Foreground="{DynamicResource foreColorDark}"/>
                <ComboBox Name="fontDropdown" IsEditable="True" Margin="0,2,5,2"
                          ItemsSource="{Binding FontFamilies}"
                          SelectedItem="{Binding TextBoxFontFamily, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Source}" FontFamily="{Binding}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox Name="fontSizeDropdown" IsEditable="True"
                          Text="{Binding TextBoxFontSize, Mode=TwoWay, UpdateSourceTrigger=Default}"
                          LostFocus="fontSizeDropdown_Changed" DropDownClosed="fontSizeDropdown_Changed"
                          Margin="0,2,25,2">
                    <ComboBoxItem>8</ComboBoxItem>
                    <ComboBoxItem>9</ComboBoxItem>
                    <ComboBoxItem>10</ComboBoxItem>
                    <ComboBoxItem>11</ComboBoxItem>
                    <ComboBoxItem>12</ComboBoxItem>
                    <ComboBoxItem>14</ComboBoxItem>
                    <ComboBoxItem>16</ComboBoxItem>
                    <ComboBoxItem>18</ComboBoxItem>
                    <ComboBoxItem>20</ComboBoxItem>
                    <ComboBoxItem>22</ComboBoxItem>
                    <ComboBoxItem>24</ComboBoxItem>
                    <ComboBoxItem>26</ComboBoxItem>
                    <ComboBoxItem>28</ComboBoxItem>
                    <ComboBoxItem>36</ComboBoxItem>
                    <ComboBoxItem>48</ComboBoxItem>
                    <ComboBoxItem>72</ComboBoxItem>
                </ComboBox>
            </StackPanel>
        </DockPanel>

        <ae:TextEditor Name="textbox" WordWrap="False"
                       FontSize="16"
                       ShowLineNumbers="True"
                       Background="{DynamicResource backColorDark}"
                       Foreground="{DynamicResource foreColorDark}"
                       BorderBrush="{DynamicResource backColorLight}"
                       BorderThickness="0,1,0,0"
                       Margin="0"
                       GotFocus="textbox_GotFocus"
                       TextChanged="textbox_TextChanged"
                       Style="{DynamicResource TextEditorStyle}">
            <ae:TextEditor.ContextMenu>
                <ContextMenu Background="{DynamicResource backColorLight}" Margin="-30,0,-25,0">
                    <MenuItem Header="Toggle Check" InputGestureText="Alt+C" Command="{Binding CheckMarkCommand}"/>
                    <Separator/>
                    <MenuItem Header="Cut" InputGestureText="Ctrl+X" Command="{Binding CutCommand}"/>
                    <MenuItem Header="Copy" InputGestureText="Ctrl+C" Command="{Binding CopyCommand}"/>
                    <MenuItem Header="Paste" InputGestureText="Ctrl+V" Command="{Binding PasteCommand}"/>
                    <Separator/>
                    <MenuItem Header="Find" InputGestureText="Ctrl+F" Command="{Binding FindCommand}"/>
                    <MenuItem Header="Find + Replace" InputGestureText="Ctrl+H" Command="{Binding FindAndReplaceCommand}"/>
                    <MenuItem Header="Define Selection" InputGestureText="Alt+D" Command="{Binding DefineCommand}"/>
                    <MenuItem Header="Sort Selected Lines" InputGestureText="Alt+S" Command="{Binding SortCommand}"/>
                    <Separator/>
                    <MenuItem Header="Insert Date" InputGestureText="Ctrl+M" Command="{Binding TodaysDateCommand}"/>
                    <MenuItem Header="Insert Time" InputGestureText="Ctrl+T" Command="{Binding CurrentTimeCommand}"/>
                    <Separator/>
                    <MenuItem Header="Select All" InputGestureText="Ctrl+A" Command="{Binding SelectAllCommand}"/>
                </ContextMenu>
            </ae:TextEditor.ContextMenu>
        </ae:TextEditor>
    </DockPanel>
</Window>
