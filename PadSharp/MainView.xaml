<Window x:Class="PadSharp.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
        Name="window" Title="{StaticResource appName}"
        Height="350" Width="525"
        MinHeight="200" MinWidth="350"
        WindowStartupLocation="Manual"
        Icon="./favicon.ico"
        Closing="window_Closing"
        PreviewMouseWheel="window_MouseWheel"
        ResizeMode="CanResizeWithGrip"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    
    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="Foreground" Value="{DynamicResource foreColorLight}"/>
        </Style>
        <Style x:Key="checkMenu" TargetType="MenuItem">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Foreground" Value="#23272d"/>
        </Style>
    </Window.Resources>
    
    <Window.InputBindings>
        <!-- File -->
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding newCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding openCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding saveCommand}"/>

        <!-- Edit -->
        <KeyBinding Modifiers="Ctrl" Key="Z" Command="{Binding undoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="Y" Command="{Binding redoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="C" Command="{Binding copyCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="X" Command="{Binding cutCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="V" Command="{Binding pasteCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="F" Command="{Binding findCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="H" Command="{Binding findAndReplaceCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="G" Command="{Binding gotoCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="A" Command="{Binding selectAllCommand}"/>

        <!-- Insert -->
        <KeyBinding Modifiers="Ctrl" Key="M" Command="{Binding todaysDateCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="T" Command="{Binding currentTimeCommand}"/>
    </Window.InputBindings>

    <DockPanel FocusManager.FocusedElement="{Binding ElementName=textbox}" Background="{DynamicResource backColorDark}">
        <StackPanel Orientation="Vertical" DockPanel.Dock="Top" Background="{DynamicResource backColorDark}" Margin="0">

            <DockPanel Background="{DynamicResource backColorLight}">

                <Menu DockPanel.Dock="Left" Name="menu" Height="{StaticResource buttonHeight}" Margin="0">
                    <MenuItem Height="{Binding Height, ElementName=menu}" 
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}">
                        <MenuItem.Header>
                            <TextBlock Text="File" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="New" InputGestureText="Ctrl+N" Command="{Binding newCommand}"/>
                        <MenuItem Header="New Window" Command="{Binding newWindowCommand}"/>
                        <MenuItem Header="Open" InputGestureText="Ctrl+O" Command="{Binding openCommand}"/>
                        <MenuItem Header="Open in Explorer" Command="{Binding openInExplorerCommand}"/>
                        <MenuItem Header="Save" InputGestureText="Ctrl+S" Command="{Binding saveCommand}"/>
                        <MenuItem Header="Save As" Command="{Binding saveAsCommand}"/>
                        <MenuItem Header="Exit" Command="{Binding exitCommand}"/>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}">
                        <MenuItem.Header>
                            <TextBlock Text="Edit" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Undo" InputGestureText="Ctrl+Z" Command="{Binding undoCommand}"/>
                        <MenuItem Header="Redo" InputGestureText="Ctrl+Y" Command="{Binding redoCommand}"/>
                        <MenuItem Header="Cut" InputGestureText="Ctrl+X" Command="{Binding cutCommand}"/>
                        <MenuItem Header="Copy" InputGestureText="Ctrl+C" Command="{Binding copyCommand}"/>
                        <MenuItem Header="Paste" InputGestureText="Ctrl+V" Command="{Binding pasteCommand}"/>
                        <MenuItem Header="Find" InputGestureText="Ctrl+F" Command="{Binding findCommand}"/>
                        <MenuItem Header="Find + Replace" InputGestureText="Ctrl+H" Command="{Binding findAndReplaceCommand}"/>
                        <MenuItem Header="Goto" InputGestureText="Ctrl+G" Command="{Binding gotoCommand}"/>
                        <MenuItem Header="Select All" InputGestureText="Ctrl+A" Command="{Binding selectAllCommand}"/>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}">
                        <MenuItem.Header>
                            <TextBlock Text="Insert" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Today's Date" InputGestureText="Ctrl+M" Command="{Binding todaysDateCommand}"/>
                        <MenuItem Header="Current Time" InputGestureText="Ctrl+T" Command="{Binding currentTimeCommand}"/>
                        <MenuItem Header="Date and Time" Command="{Binding dateAndTimeCommand}"/>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}">
                        <MenuItem.Header>
                            <TextBlock Text="Settings" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Theme" Name="themeMenu">
                            <MenuItem Header="Light" IsCheckable="True" Checked="theme_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="Dark" IsCheckable="True" Checked="theme_Checked" Style="{StaticResource checkMenu}"/>
                        </MenuItem>
                        <MenuItem Header="Date Format" Name="dateFormatMenu">
                            <MenuItem Header="dddd, MMMM dd, yyyy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="dddd, MMMM d, yyyy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="MMMM dd yyyy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="MMMM d yyyy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="MMM-dd-yyyy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="MMM-dd-yy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="MMM-d-yyyy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="MMM-d-yy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="MM/dd/yyyy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="MM/dd/yy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="M/d/yyyy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="M/d/yy" IsCheckable="True" Checked="date_Checked" Style="{StaticResource checkMenu}"/>
                        </MenuItem>
                        <MenuItem Header="Time Format" Name="timeFormatMenu">
                            <MenuItem Header="HH:mm:ss" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="hh:mm:ss tt" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="hh:mm:ss" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="H:mm:ss" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="h:mm:ss tt" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="h:mm:ss" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="H:mm" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="h:mm tt" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                            <MenuItem Header="h:mm" IsCheckable="True" Checked="time_Checked" Style="{StaticResource checkMenu}"/>
                        </MenuItem>
                        <MenuItem Header="Show Line Numbers" Name="showLineNumbersDropdown" 
                                  IsCheckable="True" Checked="showLineNumbers_Checked" Unchecked="showLineNumbers_Checked"/>
                        <MenuItem Header="Show Status Bar" Name="showStatusBarDropdown" 
                                  IsCheckable="True" Checked="showStatusBar_Checked" Unchecked="showStatusBar_Checked"/>
                        <MenuItem Header="Word Wrap" Name="wordWrapDropdown" 
                                  IsCheckable="True" Checked="wordWrap_Checked" Unchecked="wordWrap_Checked"/>
                    </MenuItem>

                    <MenuItem Height="{Binding Height, ElementName=menu}"
                              Template="{DynamicResource MenuItemTemplate}" ItemsPanel="{StaticResource hideCheck}">
                        <MenuItem.Header>
                            <TextBlock Text="Help" VerticalAlignment="Center"/>
                        </MenuItem.Header>
                        <MenuItem Header="Date/Time Format Guide" 
                                  Tag="https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings"
                                  Click="help_Click"/>
                        <MenuItem Header="GitHub" Tag="https://github.com/collenirwin/PadSharp" Click="help_Click"/>
                    </MenuItem>
                </Menu>

                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Text="{Binding file.Name, FallbackValue='Not Saved'}" FontStyle="Italic"
                               ToolTip="{Binding file.FullName}" Foreground="{DynamicResource foreColorDark}"/>
                </StackPanel>
            </DockPanel>
            
            <StackPanel Name="findPanelParent" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="Collapsed">

                <CheckBox Name="matchCase" Foreground="{DynamicResource foreColorDark}" FlowDirection="RightToLeft" IsTabStop="False" Margin="9">
                    Match Case
                </CheckBox>

                <TextBlock Foreground="{DynamicResource foreColorDark}">Find</TextBlock>
                
                <StackPanel Name="findPanel" Orientation="Horizontal" HorizontalAlignment="Right"
                            Margin="0" Width="262" 
                            Background="{DynamicResource backColorDark}">
                    <Border BorderBrush="{DynamicResource backColorLight}" 
                            BorderThickness="1" CornerRadius="2" Margin="0,5,5,5">
                        <TextBox Name="txtFind" FontSize="14" Width="180" TextAlignment="Right"
                                 Background="{DynamicResource backColorLight}"
                                 Foreground="{DynamicResource foreColorDark}"
                                 TextChanged="txtFind_TextChanged"/>
                    </Border>
                    <Button Content="˄" FontFamily="Consolas" FontWeight="Bold" Click="findUp_Click" IsTabStop="False"
                            Margin="0,5,5,5" Padding="4,6,4,0" Width="20" FontSize="14" Style="{DynamicResource ButtonStyle}"/>
                    <Button Content="˅" FontFamily="Consolas" FontWeight="Bold" Click="findDown_Click" IsTabStop="False"
                            Margin="0,5,5,5" Padding="4,6,4,0" Width="20" FontSize="14" Style="{DynamicResource ButtonStyle}"/>
                    <Button Content="✖" FontFamily="Consolas" Click="closeFindReplace_Click" IsTabStop="False"
                            Margin="0,5,5,5" Padding="0,0,0,0" Width="20" FontSize="10" Style="{DynamicResource ButtonStyle}"/>
                </StackPanel>
            </StackPanel>

            <StackPanel Name="replacePanelParent" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="Collapsed">
                
                <TextBlock Foreground="{DynamicResource foreColorDark}">Replace</TextBlock>
                
                <StackPanel Name="replacePanel" Orientation="Horizontal" HorizontalAlignment="Right"
                            Margin="0" Width="{Binding Width, ElementName=findPanel}"
                            Background="{DynamicResource backColorDark}">
                    <Border BorderBrush="{DynamicResource backColorLight}"
                            BorderThickness="1" CornerRadius="2" Margin="0,5,5,5">
                        <TextBox Name="txtReplace" FontSize="14" Width="180" TextAlignment="Right"
                                 Background="{DynamicResource backColorLight}"
                                 Foreground="{DynamicResource foreColorDark}"/>
                    </Border>
                    <Button Content="Next" Margin="0,5,5,5" Padding="5" FontSize="10"
                            Click="replaceNext_Click"
                            IsTabStop="False"
                            Style="{DynamicResource ButtonStyle}"/>
                    <Button Content="All" Margin="0,5,5,5" Padding="5" FontSize="10"
                            Click="replaceAll_Click"
                            IsTabStop="False"
                            Style="{DynamicResource ButtonStyle}"/>
                </StackPanel>
            </StackPanel>
            
            <StackPanel Name="gotoPanel" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="Collapsed">
                <TextBlock Foreground="{DynamicResource foreColorDark}">Go to line</TextBlock>
                <Border BorderBrush="{DynamicResource backColorLight}"
                            BorderThickness="1" CornerRadius="2" Margin="0,5,5,5">
                    <TextBox Name="txtGoto" FontSize="14" Width="180" TextAlignment="Right"
                                 Background="{DynamicResource backColorLight}"
                                 Foreground="{DynamicResource foreColorDark}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding gotoGoCommand}"/>
                            <KeyBinding Key="Return" Command="{Binding gotoGoCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </Border>
                <Button Content="Go" Margin="0,5,5,5" Padding="5" FontSize="10"
                        Click="goto_Click"
                        Style="{DynamicResource ButtonStyle}"/>
                <Button Content="✖" FontFamily="Consolas" Click="closeGoto_Click"
                            Margin="0,5,5,5" Padding="5" FontSize="10" Style="{DynamicResource ButtonStyle}"/>
            </StackPanel>
        </StackPanel>

        <DockPanel Name="statusBar" DockPanel.Dock="Bottom" Background="{DynamicResource backColorLight}">
            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                <TextBlock Text="Ln" Foreground="{DynamicResource foreColorDark}"/>
                <TextBlock Text="{Binding lineNumber}" Foreground="{DynamicResource foreColorLight}"/>
                <TextBlock Text="Col" Foreground="{DynamicResource foreColorDark}"/>
                <TextBlock Text="{Binding columnNumber}" Foreground="{DynamicResource foreColorLight}"/>
                <TextBlock Text="Words" Foreground="{DynamicResource foreColorDark}"/>
                <TextBlock Text="{Binding wordCount}" Foreground="{DynamicResource foreColorLight}"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="right" Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock Text="Font" Foreground="{DynamicResource foreColorDark}"/>
                <ComboBox Name="fontDropdown" IsEditable="True" Margin="0,2,5,2"
                          FlowDirection="RightToLeft" SelectionChanged="fontDropdown_SelectionChanged"/>
                <ComboBox Name="fontSizeDropdown" IsEditable="True" 
                          LostFocus="fontSizeDropdown_Changed" DropDownClosed="fontSizeDropdown_Changed"
                          FlowDirection="RightToLeft" Margin="0,2,25,2">
                    <ComboBoxItem>8</ComboBoxItem>
                    <ComboBoxItem>9</ComboBoxItem>
                    <ComboBoxItem>10</ComboBoxItem>
                    <ComboBoxItem>11</ComboBoxItem>
                    <ComboBoxItem>12</ComboBoxItem>
                    <ComboBoxItem>14</ComboBoxItem>
                    <ComboBoxItem>16</ComboBoxItem>
                    <ComboBoxItem>18</ComboBoxItem>
                    <ComboBoxItem>20</ComboBoxItem>
                    <ComboBoxItem>22</ComboBoxItem>
                    <ComboBoxItem>24</ComboBoxItem>
                    <ComboBoxItem>26</ComboBoxItem>
                    <ComboBoxItem>28</ComboBoxItem>
                    <ComboBoxItem>36</ComboBoxItem>
                    <ComboBoxItem>48</ComboBoxItem>
                    <ComboBoxItem>72</ComboBoxItem>
                </ComboBox>
            </StackPanel>
        </DockPanel>

        <ae:TextEditor Name="textbox" WordWrap="False"
                       FontSize="16"
                       ShowLineNumbers="True"
                       Background="{DynamicResource backColorDark}"
                       Foreground="{DynamicResource foreColorDark}"
					   BorderBrush="{DynamicResource backColorLight}"
                       BorderThickness="0,1,0,0"
                       Margin="0"
                       TextChanged="textbox_TextChanged" 
                       Style="{DynamicResource TextEditorStyle}">
            <ae:TextEditor.ContextMenu>
                <ContextMenu Background="{DynamicResource backColorLight}" Margin="-34,0,-25,0">
                    <MenuItem Header="Cut" InputGestureText="Ctrl+X" Command="{Binding cutCommand}"/>
                    <MenuItem Header="Copy" InputGestureText="Ctrl+C" Command="{Binding copyCommand}"/>
                    <MenuItem Header="Paste" InputGestureText="Ctrl+V" Command="{Binding pasteCommand}"/>
                    <Separator/>
                    <MenuItem Header="Find" InputGestureText="Ctrl+F" Command="{Binding findCommand}"/>
                    <MenuItem Header="Find + Replace" InputGestureText="Ctrl+H" Command="{Binding findAndReplaceCommand}"/>
                    <Separator/>
                    <MenuItem Header="Insert Date" InputGestureText="Ctrl+M" Command="{Binding todaysDateCommand}"/>
                    <MenuItem Header="Insert Time" InputGestureText="Ctrl+T" Command="{Binding currentTimeCommand}"/>
                    <Separator/>
                    <MenuItem Header="Select All" InputGestureText="Ctrl+A" Command="{Binding selectAllCommand}"/>
                </ContextMenu>
            </ae:TextEditor.ContextMenu>
        </ae:TextEditor>
    </DockPanel>
</Window>
