<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="PadSharp.App"
             StartupUri="./MainView.xaml">
    
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/BoinWPF;component/Themes/Dark.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <sys:String x:Key="appName">Pad#</sys:String>
            <sys:Double x:Key="buttonHeight">40</sys:Double>

            <ItemsPanelTemplate x:Key="hideCheck">
            	<StackPanel Margin="-20,0,-2,0" Background="transparent"/>
            </ItemsPanelTemplate>

        	<Style x:Key="TextEditorStyle" TargetType="{x:Type avalonedit:TextEditor}">
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="0"/>
        		<Setter Property="FlowDirection" Value="LeftToRight"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type avalonedit:TextEditor}">
        					<Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
        						<ScrollViewer x:Name="PART_ScrollViewer" CanContentScroll="True"
                                              Content="{Binding TextArea, RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="False" HorizontalContentAlignment="Left"
                                              HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                              Padding="{TemplateBinding Padding}"
                                              VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                              VerticalContentAlignment="Top"
                                              Background="{TemplateBinding Background}" 
                                              BorderBrush="{TemplateBinding BorderBrush}" 
                                              Template="{DynamicResource ScrollViewerControlTemplate}"/>
        					</Border>
        					<ControlTemplate.Triggers>
        						<Trigger Property="WordWrap" Value="True">
        							<Setter Property="HorizontalScrollBarVisibility" TargetName="PART_ScrollViewer" Value="Disabled"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>

            <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ScrollContentPresenter Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                    <ScrollBar 
        				x:Name="PART_VerticalScrollBar"
        				Grid.Column="1"
        				Opacity="0.25"
        				Background="{TemplateBinding BorderBrush}"
        				Foreground="{TemplateBinding BorderBrush}"
        				BorderBrush="{TemplateBinding BorderBrush}"
        				Value="{TemplateBinding VerticalOffset}"
        				Maximum="{TemplateBinding ScrollableHeight}"
        				ViewportSize="{TemplateBinding ViewportHeight}"
        				Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                    <ScrollBar 
        				x:Name="PART_HorizontalScrollBar"
        				Orientation="Horizontal"
        				Grid.Row="1"
        				Opacity="0.25"
        				Background="{TemplateBinding BorderBrush}"
        				Foreground="{TemplateBinding BorderBrush}"
        				BorderBrush="{TemplateBinding BorderBrush}"
        				Value="{TemplateBinding HorizontalOffset}"
        				Maximum="{TemplateBinding ScrollableWidth}"
        				ViewportSize="{TemplateBinding ViewportWidth}"
        				Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                </Grid>
            </ControlTemplate>
            
        	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        		<Setter Property="OverridesDefaultStyle" Value="true"/>
        		<Setter Property="IsTabStop" Value="false"/>
        		<Setter Property="Focusable" Value="false"/>
        		<Setter Property="ClickMode" Value="Press"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
        						<Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
        							<Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
        						</Border>
        					</Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource backColorLight}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource backColorLight}"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
            
        	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="*"/>
        				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        			</Grid.ColumnDefinitions>
        			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        				<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
        					<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
        						<ScrollViewer x:Name="DropDownScrollViewer">
        							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
        								<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        									<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
        								</Canvas>
        								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        							</Grid>
        						</ScrollViewer>
        					</Border>
        				</Themes:SystemDropShadowChrome>
        			</Popup>
        			<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
        			<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        		</Grid>
        		<ControlTemplate.Triggers>
        			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        				<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
        				<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
        			</Trigger>
        			<Trigger Property="HasItems" Value="false">
        				<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
        			</Trigger>
        			<MultiTrigger>
        				<MultiTrigger.Conditions>
        					<Condition Property="IsGrouping" Value="true"/>
        					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        				</MultiTrigger.Conditions>
        				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        			</MultiTrigger>
        			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        				<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        				<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
        			</Trigger>
        		</ControlTemplate.Triggers>
        	</ControlTemplate>
        	<SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
            
        	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        		<Setter Property="OverridesDefaultStyle" Value="true"/>
        		<Setter Property="AllowDrop" Value="true"/>
        		<Setter Property="MinWidth" Value="0"/>
        		<Setter Property="MinHeight" Value="0"/>
        		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type TextBox}">
        					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
            
        	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="*"/>
        				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        			</Grid.ColumnDefinitions>
        			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        				<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
        					<Border x:Name="dropDownBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
        						<ScrollViewer x:Name="DropDownScrollViewer">
        							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
        								<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        									<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
        								</Canvas>
        								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        							</Grid>
        						</ScrollViewer>
        					</Border>
        				</Themes:SystemDropShadowChrome>
        			</Popup>
        			<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{DynamicResource foreColorLight}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
        			<Border x:Name="border" Background="{TemplateBinding Background}" Margin="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
        				<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"/>
        			</Border>
        		</Grid>
        		<ControlTemplate.Triggers>
        			<Trigger Property="IsEnabled" Value="false">
        				<Setter Property="Opacity" TargetName="border" Value="0.56"/>
        			</Trigger>
        			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        				<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
        				<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
        			</Trigger>
        			<Trigger Property="HasItems" Value="false">
        				<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
        			</Trigger>
        			<MultiTrigger>
        				<MultiTrigger.Conditions>
        					<Condition Property="IsGrouping" Value="true"/>
        					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        				</MultiTrigger.Conditions>
        				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        			</MultiTrigger>
        			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        				<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        				<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
        			</Trigger>
        		</ControlTemplate.Triggers>
        	</ControlTemplate>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Background" Value="{DynamicResource backColorDark}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource foreColorDark}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="6,3,5,3"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
